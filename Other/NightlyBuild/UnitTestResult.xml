<?xml version="1.0" encoding="utf-8" standalone="no"?>
<!--This file represents the results of running a test suite-->
<test-results name="H:\Projects\duality\UnitTesting\Duality.nunit" total="127" errors="0" failures="0" not-run="0" inconclusive="0" ignored="0" skipped="0" invalid="0" date="2015-01-13" time="20:41:03">
  <environment nunit-version="2.6.3.13283" clr-version="2.0.50727.5485" os-version="Microsoft Windows NT 6.1.7601 Service Pack 1" platform="Win32NT" cwd="H:\Projects\duality\Other\NightlyBuild" machine-name="DELL-PC" user="Dell" user-domain="Dell-PC" />
  <culture-info current-culture="en-US" current-uiculture="en-US" />
  <test-suite type="Project" name="H:\Projects\duality\UnitTesting\Duality.nunit" executed="True" result="Success" success="True" time="20.994" asserts="0">
    <results>
      <test-suite type="Assembly" name="H:\Projects\duality\UnitTesting\DualityTests\bin\DualityTests.dll" executed="True" result="Success" success="True" time="20.912" asserts="0">
        <results>
          <test-suite type="Namespace" name="Duality" executed="True" result="Success" success="True" time="12.553" asserts="0">
            <results>
              <test-suite type="Namespace" name="Tests" executed="True" result="Success" success="True" time="12.552" asserts="0">
                <results>
                  <test-suite type="Namespace" name="Cloning" executed="True" result="Success" success="True" time="2.454" asserts="0">
                    <results>
                      <test-suite type="TestFixture" name="CloneProviderTest" executed="True" result="Success" success="True" time="1.049" asserts="0">
                        <results>
                          <test-case name="Duality.Tests.Cloning.CloneProviderTest.AdditiveDelegates" executed="True" result="Success" success="True" time="0.100" asserts="9" />
                          <test-case name="Duality.Tests.Cloning.CloneProviderTest.CircularOwnership" executed="True" result="Success" success="True" time="0.010" asserts="1" />
                          <test-case name="Duality.Tests.Cloning.CloneProviderTest.CloneComplexObject" executed="True" result="Success" success="True" time="0.116" asserts="2" />
                          <test-case name="Duality.Tests.Cloning.CloneProviderTest.ClonePlainOldData" executed="True" result="Success" success="True" time="0.005" asserts="2" />
                          <test-case name="Duality.Tests.Cloning.CloneProviderTest.ComplexDelegates" executed="True" result="Success" success="True" time="0.106" asserts="22" />
                          <test-case name="Duality.Tests.Cloning.CloneProviderTest.CopyToTarget" executed="True" result="Success" success="True" time="0.003" asserts="2" />
                          <test-case name="Duality.Tests.Cloning.CloneProviderTest.CopyToTargetPreservation" executed="True" result="Success" success="True" time="0.009" asserts="3" />
                          <test-case name="Duality.Tests.Cloning.CloneProviderTest.ExplicitCloning" executed="True" result="Success" success="True" time="0.030" asserts="8" />
                          <test-case name="Duality.Tests.Cloning.CloneProviderTest.IdentityPreservation" executed="True" result="Success" success="True" time="0.069" asserts="12" />
                          <test-case name="Duality.Tests.Cloning.CloneProviderTest.OverwriteWithNull" executed="True" result="Success" success="True" time="0.005" asserts="4" />
                          <test-case name="Duality.Tests.Cloning.CloneProviderTest.OwnershipBehavior" executed="True" result="Success" success="True" time="0.016" asserts="2" />
                          <test-case name="Duality.Tests.Cloning.CloneProviderTest.PartialCloning" executed="True" result="Success" success="True" time="0.016" asserts="8" />
                          <test-case name="Duality.Tests.Cloning.CloneProviderTest.PerformanceTest" executed="True" result="Success" success="True" time="0.341" asserts="0">
                            <reason>
                              <message><![CDATA[]]></message>
                            </reason>
                          </test-case>
                          <test-case name="Duality.Tests.Cloning.CloneProviderTest.SimpleDelegates" executed="True" result="Success" success="True" time="0.003" asserts="3" />
                          <test-case name="Duality.Tests.Cloning.CloneProviderTest.SkippedObjects" executed="True" result="Success" success="True" time="0.010" asserts="5" />
                          <test-case name="Duality.Tests.Cloning.CloneProviderTest.StaticDelegates" executed="True" result="Success" success="True" time="0.003" asserts="3" />
                          <test-case name="Duality.Tests.Cloning.CloneProviderTest.StructInvestigate" executed="True" result="Success" success="True" time="0.066" asserts="2" />
                          <test-case name="Duality.Tests.Cloning.CloneProviderTest.WeakReferenceBehavior" executed="True" result="Success" success="True" time="0.004" asserts="9" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="SpecificCloningTest" executed="True" result="Success" success="True" time="1.389" asserts="0">
                        <results>
                          <test-case name="Duality.Tests.Cloning.SpecificCloningTest.CloneComponent" executed="True" result="Success" success="True" time="0.080" asserts="3" />
                          <test-case name="Duality.Tests.Cloning.SpecificCloningTest.CloneContentRef" executed="True" result="Success" success="True" time="0.030" asserts="6" />
                          <test-case name="Duality.Tests.Cloning.SpecificCloningTest.CloneGameObject" executed="True" result="Success" success="True" time="0.029" asserts="5" />
                          <test-case name="Duality.Tests.Cloning.SpecificCloningTest.CloneJointRigidBodies" executed="True" result="Success" success="True" time="0.103" asserts="7" />
                          <test-case name="Duality.Tests.Cloning.SpecificCloningTest.CloneResource" executed="True" result="Success" success="True" time="0.001" asserts="3" />
                          <test-case name="Duality.Tests.Cloning.SpecificCloningTest.CloneScene" executed="True" result="Success" success="True" time="0.081" asserts="29" />
                          <test-case name="Duality.Tests.Cloning.SpecificCloningTest.CopyToGameObjectAddComponentEvent" executed="True" result="Success" success="True" time="0.005" asserts="2" />
                          <test-case name="Duality.Tests.Cloning.SpecificCloningTest.CopyToGameObjectAddGameObjectEvent" executed="True" result="Success" success="True" time="0.047" asserts="2" />
                          <test-case name="Duality.Tests.Cloning.SpecificCloningTest.CopyToGameObjectParentObject" executed="True" result="Success" success="True" time="0.002" asserts="1" />
                          <test-case name="Duality.Tests.Cloning.SpecificCloningTest.CopyToGameObjectParentScene" executed="True" result="Success" success="True" time="0.004" asserts="1" />
                          <test-case name="Duality.Tests.Cloning.SpecificCloningTest.CopyToGameObjectPreservation" executed="True" result="Success" success="True" time="0.002" asserts="1" />
                          <test-case name="Duality.Tests.Cloning.SpecificCloningTest.RealWorldPerformanceTest" executed="True" result="Success" success="True" time="0.759" asserts="0">
                            <reason>
                              <message><![CDATA[]]></message>
                            </reason>
                          </test-case>
                          <test-case name="Duality.Tests.Cloning.SpecificCloningTest.TransformHierarchyInitialized" executed="True" result="Success" success="True" time="0.087" asserts="12" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="Namespace" name="Components" executed="True" result="Success" success="True" time="0.125" asserts="0">
                    <results>
                      <test-suite type="TestFixture" name="RigidBodyTest" executed="True" result="Success" success="True" time="0.121" asserts="0">
                        <results>
                          <test-case name="Duality.Tests.Components.RigidBodyTest.CopyAddShapes" executed="True" result="Success" success="True" time="0.033" asserts="4" />
                          <test-case name="Duality.Tests.Components.RigidBodyTest.CopyModifyShapes" executed="True" result="Success" success="True" time="0.019" asserts="6" />
                          <test-case name="Duality.Tests.Components.RigidBodyTest.CopyRemoveShapes" executed="True" result="Success" success="True" time="0.007" asserts="4" />
                          <test-case name="Duality.Tests.Components.RigidBodyTest.CopyReplaceShapes" executed="True" result="Success" success="True" time="0.033" asserts="8" />
                          <test-case name="Duality.Tests.Components.RigidBodyTest.CreateEmptyBody" executed="True" result="Success" success="True" time="0.006" asserts="2" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="Namespace" name="Drawing" executed="True" result="Success" success="True" time="2.129" asserts="0">
                    <results>
                      <test-suite type="TestFixture" name="CanvasTest" executed="True" result="Success" success="True" time="2.127" asserts="0">
                        <results>
                          <test-case name="Duality.Tests.Drawing.CanvasTest.RenderAllShapes" executed="True" result="Success" success="True" time="1.477" asserts="1" />
                          <test-case name="Duality.Tests.Drawing.CanvasTest.RenderAllShapesTransformed" executed="True" result="Success" success="True" time="0.569" asserts="1" />
                          <test-case name="Duality.Tests.Drawing.CanvasTest.RenderDiagonalLine" executed="True" result="Success" success="True" time="0.012" asserts="1" />
                          <test-case name="Duality.Tests.Drawing.CanvasTest.RenderFail" executed="True" result="Success" success="True" time="0.011" asserts="1" />
                          <test-case name="Duality.Tests.Drawing.CanvasTest.RenderNothing" executed="True" result="Success" success="True" time="0.009" asserts="1" />
                          <test-case name="Duality.Tests.Drawing.CanvasTest.RenderRedSquare" executed="True" result="Success" success="True" time="0.010" asserts="1" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="Namespace" name="Resources" executed="True" result="Success" success="True" time="1.928" asserts="0">
                    <results>
                      <test-suite type="TestFixture" name="ExplicitReferenceAttributeTest" executed="True" result="Success" success="True" time="0.045" asserts="0">
                        <results>
                          <test-case name="Duality.Tests.Resources.ExplicitReferenceAttributeTest.CircularReferences" executed="True" result="Success" success="True" time="0.031" asserts="8" />
                          <test-case name="Duality.Tests.Resources.ExplicitReferenceAttributeTest.NoExplicitReferences" executed="True" result="Success" success="True" time="0.002" asserts="4" />
                          <test-case name="Duality.Tests.Resources.ExplicitReferenceAttributeTest.RegularReferences" executed="True" result="Success" success="True" time="0.002" asserts="4" />
                          <test-case name="Duality.Tests.Resources.ExplicitReferenceAttributeTest.VoidReferences" executed="True" result="Success" success="True" time="0.002" asserts="4" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="ICmpInitializableTest" executed="True" result="Success" success="True" time="0.971" asserts="0">
                        <results>
                          <test-case name="Duality.Tests.Resources.ICmpInitializableTest.ActivateDeactivate" executed="True" result="Success" success="True" time="0.038" asserts="6" />
                          <test-case name="Duality.Tests.Resources.ICmpInitializableTest.AddRemove" executed="True" result="Success" success="True" time="0.008" asserts="2" />
                          <test-case name="Duality.Tests.Resources.ICmpInitializableTest.DeactivateComponentDispose" executed="True" result="Success" success="True" time="0.004" asserts="1" />
                          <test-case name="Duality.Tests.Resources.ICmpInitializableTest.DeactivateDeepGameObjectDispose" executed="True" result="Success" success="True" time="0.024" asserts="1" />
                          <test-case name="Duality.Tests.Resources.ICmpInitializableTest.DeactivateGameObjectDispose" executed="True" result="Success" success="True" time="0.003" asserts="1" />
                          <test-case name="Duality.Tests.Resources.ICmpInitializableTest.DeactivateSceneDispose" executed="True" result="Success" success="True" time="0.002" asserts="1" />
                          <test-case name="Duality.Tests.Resources.ICmpInitializableTest.IgnoreActiveStateInNonCurrentScene" executed="True" result="Success" success="True" time="0.003" asserts="4" />
                          <test-case name="Duality.Tests.Resources.ICmpInitializableTest.Serialize" executed="True" result="Success" success="True" time="0.873" asserts="3" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="PrefabTest" executed="True" result="Success" success="True" time="0.439" asserts="0">
                        <results>
                          <test-case name="Duality.Tests.Resources.PrefabTest.AllowAdditionalObjects" executed="True" result="Success" success="True" time="0.056" asserts="2" />
                          <test-case name="Duality.Tests.Resources.PrefabTest.ApplyChanges" executed="True" result="Success" success="True" time="0.101" asserts="4" />
                          <test-case name="Duality.Tests.Resources.PrefabTest.ApplyPrefab" executed="True" result="Success" success="True" time="0.047" asserts="7" />
                          <test-case name="Duality.Tests.Resources.PrefabTest.ApplyPrefabKeepsObjects" executed="True" result="Success" success="True" time="0.006" asserts="6" />
                          <test-case name="Duality.Tests.Resources.PrefabTest.CreatePrefab" executed="True" result="Success" success="True" time="0.005" asserts="3" />
                          <test-case name="Duality.Tests.Resources.PrefabTest.InstantiatePerformance" executed="True" result="Success" success="True" time="0.078" asserts="0">
                            <reason>
                              <message><![CDATA[]]></message>
                            </reason>
                          </test-case>
                          <test-case name="Duality.Tests.Resources.PrefabTest.NestedPrefabChangeListPreservation" executed="True" result="Success" success="True" time="0.023" asserts="1" />
                          <test-case name="Duality.Tests.Resources.PrefabTest.SameNamePropertyChanges" executed="True" result="Success" success="True" time="0.010" asserts="2" />
                          <test-suite type="ParameterizedTest" name="TransformHierarchyPrefabSceneBug" executed="True" result="Success" success="True" time="0.079" asserts="0">
                            <results>
                              <test-case name="Duality.Tests.Resources.PrefabTest.TransformHierarchyPrefabSceneBug(True)" executed="True" result="Success" success="True" time="0.057" asserts="2" />
                              <test-case name="Duality.Tests.Resources.PrefabTest.TransformHierarchyPrefabSceneBug(False)" executed="True" result="Success" success="True" time="0.008" asserts="2" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="SceneTest" executed="True" result="Success" success="True" time="0.442" asserts="0">
                        <results>
                          <test-case name="Duality.Tests.Resources.SceneTest.AddRemoveGameObjects" executed="True" result="Success" success="True" time="0.114" asserts="11" />
                          <test-case name="Duality.Tests.Resources.SceneTest.AddRemoveGameObjectsMultiScene" executed="True" result="Success" success="True" time="0.010" asserts="9" />
                          <test-case name="Duality.Tests.Resources.SceneTest.GameObjectActiveLists" executed="True" result="Success" success="True" time="0.013" asserts="6" />
                          <test-case name="Duality.Tests.Resources.SceneTest.GameObjectHierarchy" executed="True" result="Success" success="True" time="0.013" asserts="12" />
                          <test-case name="Duality.Tests.Resources.SceneTest.GameObjectParentLoop" executed="True" result="Success" success="True" time="0.009" asserts="8" />
                          <test-case name="Duality.Tests.Resources.SceneTest.SwitchReloadDeferredDispose" executed="True" result="Success" success="True" time="0.218" asserts="6" />
                          <test-case name="Duality.Tests.Resources.SceneTest.SwitchToDuringEnter" executed="True" result="Success" success="True" time="0.009" asserts="3" />
                          <test-case name="Duality.Tests.Resources.SceneTest.SwitchToDuringLeave" executed="True" result="Success" success="True" time="0.011" asserts="3" />
                          <test-case name="Duality.Tests.Resources.SceneTest.SwitchToDuringUpdate" executed="True" result="Success" success="True" time="0.012" asserts="4" />
                          <test-case name="Duality.Tests.Resources.SceneTest.SwitchToRegular" executed="True" result="Success" success="True" time="0.005" asserts="1" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="Namespace" name="Serialization" executed="True" result="Success" success="True" time="4.294" asserts="0">
                    <results>
                      <test-suite type="ParameterizedFixture" name="FormatterTest" executed="True" result="Success" success="True" time="4.292" asserts="0">
                        <results>
                          <test-suite type="TestFixture" name="FormatterTest(Binary)" executed="True" result="Success" success="True" time="1.635" asserts="0">
                            <results>
                              <test-case name="Duality.Tests.Serialization.FormatterTest(Binary).BackwardsCompatibility" executed="True" result="Success" success="True" time="0.148" asserts="1" />
                              <test-case name="Duality.Tests.Serialization.FormatterTest(Binary).BlendInOtherData" executed="True" result="Success" success="True" time="0.070" asserts="3" />
                              <test-case name="Duality.Tests.Serialization.FormatterTest(Binary).PerformanceTest" executed="True" result="Success" success="True" time="0.691" asserts="0">
                                <reason>
                                  <message><![CDATA[]]></message>
                                </reason>
                              </test-case>
                              <test-case name="Duality.Tests.Serialization.FormatterTest(Binary).RandomAccess" executed="True" result="Success" success="True" time="0.054" asserts="2" />
                              <test-case name="Duality.Tests.Serialization.FormatterTest(Binary).SequentialAccess" executed="True" result="Success" success="True" time="0.051" asserts="2" />
                              <test-case name="Duality.Tests.Serialization.FormatterTest(Binary).SerializeFlatStruct" executed="True" result="Success" success="True" time="0.009" asserts="1" />
                              <test-case name="Duality.Tests.Serialization.FormatterTest(Binary).SerializeObjectTree" executed="True" result="Success" success="True" time="0.024" asserts="1" />
                              <test-case name="Duality.Tests.Serialization.FormatterTest(Binary).SerializePlainOldData" executed="True" result="Success" success="True" time="0.034" asserts="7" />
                              <test-suite type="ParameterizedTest" name="ConvertFormat" executed="True" result="Success" success="True" time="0.534" asserts="0">
                                <results>
                                  <test-case name="Duality.Tests.Serialization.FormatterTest(Binary).ConvertFormat(Xml)" executed="True" result="Success" success="True" time="0.533" asserts="1" />
                                </results>
                              </test-suite>
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="FormatterTest(Xml)" executed="True" result="Success" success="True" time="2.651" asserts="0">
                            <results>
                              <test-case name="Duality.Tests.Serialization.FormatterTest(Xml).BackwardsCompatibility" executed="True" result="Success" success="True" time="0.108" asserts="1" />
                              <test-case name="Duality.Tests.Serialization.FormatterTest(Xml).BlendInOtherData" executed="True" result="Success" success="True" time="0.065" asserts="3" />
                              <test-case name="Duality.Tests.Serialization.FormatterTest(Xml).PerformanceTest" executed="True" result="Success" success="True" time="2.078" asserts="0">
                                <reason>
                                  <message><![CDATA[]]></message>
                                </reason>
                              </test-case>
                              <test-case name="Duality.Tests.Serialization.FormatterTest(Xml).RandomAccess" executed="True" result="Success" success="True" time="0.159" asserts="2" />
                              <test-case name="Duality.Tests.Serialization.FormatterTest(Xml).SequentialAccess" executed="True" result="Success" success="True" time="0.134" asserts="2" />
                              <test-case name="Duality.Tests.Serialization.FormatterTest(Xml).SerializeFlatStruct" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                              <test-case name="Duality.Tests.Serialization.FormatterTest(Xml).SerializeObjectTree" executed="True" result="Success" success="True" time="0.039" asserts="1" />
                              <test-case name="Duality.Tests.Serialization.FormatterTest(Xml).SerializePlainOldData" executed="True" result="Success" success="True" time="0.003" asserts="7" />
                              <test-suite type="ParameterizedTest" name="ConvertFormat" executed="True" result="Success" success="True" time="0.053" asserts="0">
                                <results>
                                  <test-case name="Duality.Tests.Serialization.FormatterTest(Xml).ConvertFormat(Binary)" executed="True" result="Success" success="True" time="0.052" asserts="1" />
                                </results>
                              </test-suite>
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="Namespace" name="Utility" executed="True" result="Success" success="True" time="1.562" asserts="0">
                    <results>
                      <test-suite type="TestFixture" name="AnimationTrackTest" executed="True" result="Success" success="True" time="0.311" asserts="0">
                        <results>
                          <test-case name="Duality.Tests.Utility.AnimationTrackTest.Basics" executed="True" result="Success" success="True" time="0.170" asserts="206" />
                          <test-case name="Duality.Tests.Utility.AnimationTrackTest.ColorRgbaAnimation" executed="True" result="Success" success="True" time="0.044" asserts="3" />
                          <test-case name="Duality.Tests.Utility.AnimationTrackTest.IntAnimation" executed="True" result="Success" success="True" time="0.052" asserts="105" />
                          <test-case name="Duality.Tests.Utility.AnimationTrackTest.Vector3Animation" executed="True" result="Success" success="True" time="0.041" asserts="9" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="GenericOperatorTest" executed="True" result="Success" success="True" time="0.125" asserts="0">
                        <results>
                          <test-case name="Duality.Tests.Utility.GenericOperatorTest.ColorRgbaMath" executed="True" result="Success" success="True" time="0.012" asserts="5" />
                          <test-case name="Duality.Tests.Utility.GenericOperatorTest.ConvertOperation" executed="True" result="Success" success="True" time="0.058" asserts="4" />
                          <test-case name="Duality.Tests.Utility.GenericOperatorTest.FloatMath" executed="True" result="Success" success="True" time="0.009" asserts="13" />
                          <test-case name="Duality.Tests.Utility.GenericOperatorTest.IntMath" executed="True" result="Success" success="True" time="0.007" asserts="13" />
                          <test-case name="Duality.Tests.Utility.GenericOperatorTest.LerpOperation" executed="True" result="Success" success="True" time="0.022" asserts="6" />
                          <test-case name="Duality.Tests.Utility.GenericOperatorTest.LogicalOperation" executed="True" result="Success" success="True" time="0.002" asserts="4" />
                          <test-case name="Duality.Tests.Utility.GenericOperatorTest.VectorMath" executed="True" result="Success" success="True" time="0.009" asserts="7" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="GridTest" executed="True" result="Success" success="True" time="0.072" asserts="0">
                        <results>
                          <test-case name="Duality.Tests.Utility.GridTest.AssumeRect" executed="True" result="Success" success="True" time="0.021" asserts="10" />
                          <test-case name="Duality.Tests.Utility.GridTest.Basics" executed="True" result="Success" success="True" time="0.008" asserts="17" />
                          <test-case name="Duality.Tests.Utility.GridTest.CopyConvert" executed="True" result="Success" success="True" time="0.009" asserts="1" />
                          <test-case name="Duality.Tests.Utility.GridTest.CopySelect" executed="True" result="Success" success="True" time="0.009" asserts="1" />
                          <test-case name="Duality.Tests.Utility.GridTest.Fill" executed="True" result="Success" success="True" time="0.001" asserts="1" />
                          <test-case name="Duality.Tests.Utility.GridTest.Find" executed="True" result="Success" success="True" time="0.011" asserts="4" />
                          <test-case name="Duality.Tests.Utility.GridTest.Objects" executed="True" result="Success" success="True" time="0.003" asserts="1" />
                          <test-case name="Duality.Tests.Utility.GridTest.Resize" executed="True" result="Success" success="True" time="0.002" asserts="9" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="NonClosingStreamWrapperTest" executed="True" result="Success" success="True" time="0.021" asserts="0">
                        <results>
                          <test-case name="Duality.Tests.Utility.NonClosingStreamWrapperTest.Close" executed="True" result="Success" success="True" time="0.002" asserts="3" />
                          <test-case name="Duality.Tests.Utility.NonClosingStreamWrapperTest.Read" executed="True" result="Success" success="True" time="0.013" asserts="2" />
                          <test-case name="Duality.Tests.Utility.NonClosingStreamWrapperTest.Write" executed="True" result="Success" success="True" time="0.003" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="PathHelperTest" executed="True" result="Success" success="True" time="0.261" asserts="0">
                        <results>
                          <test-case name="Duality.Tests.Utility.PathHelperTest.FileEquality" executed="True" result="Success" success="True" time="0.154" asserts="3" />
                          <test-case name="Duality.Tests.Utility.PathHelperTest.FileHashEquality" executed="True" result="Success" success="True" time="0.105" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="RawListTest" executed="True" result="Success" success="True" time="0.039" asserts="0">
                        <results>
                          <test-case name="Duality.Tests.Utility.RawListTest.Basics" executed="True" result="Success" success="True" time="0.015" asserts="19" />
                          <test-case name="Duality.Tests.Utility.RawListTest.Move" executed="True" result="Success" success="True" time="0.002" asserts="6" />
                          <test-case name="Duality.Tests.Utility.RawListTest.RemoveAll" executed="True" result="Success" success="True" time="0.005" asserts="3" />
                          <test-case name="Duality.Tests.Utility.RawListTest.Resize" executed="True" result="Success" success="True" time="0.006" asserts="5" />
                          <test-case name="Duality.Tests.Utility.RawListTest.Sort" executed="True" result="Success" success="True" time="0.006" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="ReflectionHelperTest" executed="True" result="Success" success="True" time="0.677" asserts="0">
                        <results>
                          <test-case name="Duality.Tests.Utility.ReflectionHelperTest.CustomTypeResolve" executed="True" result="Success" success="True" time="0.604" asserts="2" />
                          <test-case name="Duality.Tests.Utility.ReflectionHelperTest.RegularTypeResolve" executed="True" result="Success" success="True" time="0.006" asserts="11" />
                          <test-case name="Duality.Tests.Utility.ReflectionHelperTest.VisitorContentRef" executed="True" result="Success" success="True" time="0.061" asserts="4" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="SubStreamWrapperTest" executed="True" result="Success" success="True" time="0.043" asserts="0">
                        <results>
                          <test-case name="Duality.Tests.Utility.SubStreamWrapperTest.Read" executed="True" result="Success" success="True" time="0.008" asserts="2" />
                          <test-case name="Duality.Tests.Utility.SubStreamWrapperTest.SubSection" executed="True" result="Success" success="True" time="0.028" asserts="23" />
                          <test-case name="Duality.Tests.Utility.SubStreamWrapperTest.Write" executed="True" result="Success" success="True" time="0.004" asserts="2" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>