<?xml version="1.0" encoding="utf-8"?>
<package>
  <metadata>
    <id>AdamsLair.Duality</id>
    <version>2.11.0</version>
    <authors>Fedja Adam</authors>
    <owners>Fedja Adam</owners>
    <title>Duality Core</title>
    <iconUrl>https://github.com/AdamsLair/duality/raw/release/Build/NuGetPackageSpecs/Icons/Duality.png</iconUrl>
    <licenseUrl>https://github.com/AdamsLair/duality/raw/release/LICENSE</licenseUrl>
    <projectUrl>https://github.com/AdamsLair/duality</projectUrl>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <summary>The Duality engine core.</summary>
    <description>The Duality engine core.</description>
    <tags>Duality Core</tags>
    <releaseNotes>Polygon Shape Constraints, Canvas Thick Line Rendering Tweaks, Canvas Thick Outline Fixes
#CHANGE: Relaxed polygon shape constraints so reasonably defined polygons continue to be valid.
#CHANGE: Canvas thick line rendering now smoothly lerps from miter to bevel joint caps, improved edge case behaviour.
#FIX: Thick line drawing in canvas now respects vertex winding order and only switches to bevel joints for outward pointing corners.
#CHANGE: When drawing thick lines using the Canvas API, joints between two edges now switch between miter or bevel based on angle to prevent infinitely sharp corners.
#CHANGE: Canvas thick line drawing methods no longer produce visual artefacts when two consecutive line segments are oriented exactly the same.
#ADD: Added various polygon decomposition checks to ensure that no exceptions or invalid polygons are generated. 
#ADD: Added editor-specific checks to make sure a vertex that would make a valid polygon impossible can not be placed.
#CHANGE: Updated AdamsLair.FarseerDuality dependency to version 4.1.3. 
#FIX: This fixes an issue that was previously causing exceptions when attempting to decompose some invalid polygons.
#CHANGE: Updated AdamsLair.FarseerDuality dependency to version 4.1.2. 
#FIX: This fixes an issue that was previously causing exceptions when attempting to decompose certain (non-counterclockwise?) polygons.
#ADD: RigidBodyRenderer support for non-convex polygon shapes.
#ADD: PolyShapeInfo now supports non-convex and arbitrarily large polygons using a decomposition algorithm internally.
#CHANGE: Moved vertex and geometry updates of physics shapes out of the regular update method into the creation method, as geometry changes will always lead to re-generating fixtures while being redundant otherwise.
#CHANGE: Refactored physics shape handling to allow for N-to-1 fixture to shape relations in future updates. 
#CHANGE: Internal code / API cleanup on physics shape handling.
#CHANGE: Adjusted internal polygon shape processing to use Farseer API instead of re-inventing a poorly shaped wheel.</releaseNotes>
    <dependencies>
      <dependency id="AdamsLair.Duality.Primitives" version="2.0.4" />
      <dependency id="AdamsLair.NVorbis" version="0.7.5" />
      <dependency id="AdamsLair.FarseerDuality" version="4.1.3" />
    </dependencies>
    <references>
      <reference file="Duality.dll" />
    </references>
  </metadata>
  <files>
    <file src="..\Output\Duality.dll" target="lib" />
    <file src="..\Output\Duality.pdb" target="lib" />
    <file src="..\Output\Duality.xml" target="lib" />
  </files>
</package>